source ${menudir}/Main.cfg;
### Start WinOnHDD
menuentry "[i] ${winhdd}" --hotkey=i {
	WindowsDetect
}
### End WinOnHDD
### Start OSHdd
menuentry "[h] ${oshdd}" --hotkey=h {
	configfile ${prefix}/OSHDD.cfg
}
### End OSHdd
### Start Others
if [ -n "$pc" -a -z "$cd" -a -f  ${menudir}/Others.cfg ]; then
	source ${menudir}/Others.cfg;
fi
### End Others
### Start Grub4dos
if [ -n "$pc" ]; then
menuentry "[g] Grub4dos" --hotkey=g {
	grub4dosroot
	set opt="debug off; root ${g4droot} > nul; configfile /AIO/Menu/Grub4dos.lst"
	linux /AIO/Tools/grub4dos/grub.exe --config-file=${opt}
}
fi
### End Grub4dos
if [ -n "$efi" -a -z "$cd" ]; then
if [ xx64 = x$_SPEC_UEFI_ARCH ] -a [ -z "$cd" ]; then
### Start Clover UEFI
	menuentry "[l] Clover Bootloader" --hotkey=l {
		search --file --no-floppy --set=root /EFI/BOOT/EFIPART
		chainloader /EFI/CLOVER/CLOVERX64.efi
	}
### End Clover UEFI
fi
fi
if [ "$scheme" == "msdos" ] -a [ [ -e /AIO/Tools/USB ] -o [ -e /AIO/Tools/FORCEHDD ] ] -a [ -z "$cd" ]; then
### Start Partition Tools
menuentry "[n] ${parttoolmenu}" --hotkey=n {
	configfile ${prefix}/PartitionTool.cfg
}
### End Partition Tools
### Start PartIMG Mapper
if [ -n "$pc" ]; then
menuentry "[o] PartIMG Mapper" --hotkey=o {
	configfile ${prefix}/PartIMGMapper.cfg
}
fi
### End PartIMG Mapper
fi
### Start PartIMG Partition
menuentry "[k] PartIMG Partition" --hotkey=k {
	configfile ${prefix}/PartIMGPartition.cfg
}
### End PartIMG Partition
### Start Boot from files
menuentry "[j] ${bootfiles}" --hotkey=j {
	configfile ${prefix}/BootFromFiles.cfg
}
### End Boot from files
### Start Search Grub2 configfile
menuentry "[q] ${searchcfgmenu}" --hotkey=q {
	configfile ${prefix}/SearchCfg.cfg
}
### End Search Grub2 configfile
### Start Boot WinPE via WimBoot
submenu "[t] ${pewimboot}" --hotkey=t {
	if [ -n "$pc" ]; then
		ListWimBoot
	else
		chainloader /EFI/iPXE/WimBoot${_SPEC_UEFI_ARCH}.efi
	fi
}
### End Boot WinPE via WimBoot
### Start File Manager
submenu "[d] ${fm}" --hotkey=d {
	configfile ${prefix}/FileManager.cfg
}
### End File Manager
### Start Refresh
menuentry "[u] ${f5}" --hotkey=u {
	search --file --no-floppy --set=root /AIO/sitecuatui.com.html
	set prefix="(${root})/AIO/grub"
	unset bgloaded
	configfile ${prefix}/grub.cfg
}
### End Refresh
### Start halt
menuentry "[w] ${halt}" --hotkey=w {
	halt
}
### End halt
### Start reboot
menuentry "[x] ${reboot}" --hotkey=x {
	reboot
}
### End reboot
### Start changeroot
menuentry "[y] ${changeroot}" --hotkey=y {
	configfile ${prefix}/ChangeRoot.cfg
}
### End changeroot
### Start help
submenu "[z] ${lhelp}" --hotkey=z {
	menuentry "[1] ${about}" --hotkey=1 {
		helpmenu about
	}
	menuentry "[2] ${menu}" --hotkey=2 {
		helpmenu menu
	}
	menuentry "[3] PartIMG Mapper" --hotkey=3 {
		helpmenu partimg
	}
	menuentry "[4] ${bootfiles}" --hotkey=4 {
		helpmenu bootfiles
	}
	menuentry "[5] ${fm}" --hotkey=5 {
		helpmenu filemanager
	}
	submenu "[6] ${bgmenu}" --hotkey=6 {
		ChangeBackground
	}
	submenu "[7] ${langmenu}" --hotkey=7 {
		ChangeLanguage
	}
	if [ "$font" == "unicode-small" ]; then fontmenu="${largefont}"; else fontmenu="${smallfont}"; fi
	menuentry "[8] ${fontmenu}" --hotkey=8 {
		if [ "$font" != "unicode-small" ]; then font=unicode-small;
		elif [ -z "$lang" ]; then font=DejaVuSansMono-large; else font=unicode-large; fi
		save_env font
		unset bgloaded
		configfile ${prefix}/grub.cfg
	}
	submenu "[9] Timeout" --hotkey=9 {
		echo "${timeoutmsg}:"
		read time_out
		if regexp '^[0-9]+([0-9]+)?$' "$time_out"; then
			settimeout "$time_out"
			echo -n -e "\n${donemsg}"
		else
			echo -n -e "\n${errormsg}! ${timeoutmsg}."
		fi
		esc 2
		unset time_out
	}
}
### End help